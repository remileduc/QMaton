name: Generic CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '9 1 1 * *'

jobs:
  # Runs linters
  super-lint:
    if: false
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Run Super-Linter
        uses: github/super-linter@master
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: .*/resources/resources.py
          LOG_LEVEL: NOTICE
          VALIDATE_EDITORCONFIG: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_ISORT: true
          VALIDATE_XML: true
          VALIDATE_YAML: true

  # Runs tests
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set up Python
        uses: actions/setup-python@main

      # install X11 and other stuffs for Qt testing
      - name: Install environment
        run: |
          sudo apt update
          sudo apt install -y xvfb x11-utils libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0
          sudo apt clean

      # install python requirements
      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-tests.txt

      - name: Run tests and coverage
        env:
          QT_DEBUG_PLUGINS: 1
          PYTHONPATH: ${{ github.workspace }}/src
        run: xvfb-run --auto-servernum $(which python3) test.py

      - name: Print test results
        if: ${{ always() }}
        run: cat pytest-coverage.txt

      - name: Comment Coverage
        if: ${{ always() }}
        uses: coroo/pytest-coverage-commentator@main

      - name: chmod
        if: ${{ always() }}
        run: sudo chmod -R a+rwx /var/crash
      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@master
        with:
          name: crashes
          path: /var/crash
